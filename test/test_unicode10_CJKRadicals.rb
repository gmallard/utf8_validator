# encoding: utf-8
#
# This file is machine generated.  DO NOT EDIT!
#
if Kernel.respond_to?(:require_relative)
  require_relative("./helper")
else
  $:.unshift(File.dirname(__FILE__))
  require 'helper'
end
#
# == Purpose
#
# Tests for the #{UTF8::Validator} implementation.
#
# Test data pulled and generated from:
#
# https://www.unicode.org/Public/10.0.0/ucd/
#
class TestUnicode10CJKRadicals < Test::Unit::TestCase
  #
  def setup
    @validator = UTF8::Validator.new
    @vercheck = ((RUBY_VERSION =~ /1.9/) or (RUBY_VERSION =~ /2./)) ? true : false
  end

  #
  def teardown
    @validator = nil
  end

  def test_unicode10_CJKRadicals
    test_data = [
    "\d2F00",  #
    "\d4E00",  #
    "\d2F01",  #
    "\d4E28",  #
    "\d2F02",  #
    "\d4E36",  #
    "\d2F03",  #
    "\d4E3F",  #
    "\d2F04",  #
    "\d4E59",  #
    "\d2F05",  #
    "\d4E85",  #
    "\d2F06",  #
    "\d4E8C",  #
    "\d2F07",  #
    "\d4EA0",  #
    "\d2F08",  #
    "\d4EBA",  #
    "\d2F09",  #
    "\d513F",  #
    "\d2F0A",  #
    "\d5165",  #
    "\d2F0B",  #
    "\d516B",  #
    "\d2F0C",  #
    "\d5182",  #
    "\d2F0D",  #
    "\d5196",  #
    "\d2F0E",  #
    "\d51AB",  #
    "\d2F0F",  #
    "\d51E0",  #
    "\d2F10",  #
    "\d51F5",  #
    "\d2F11",  #
    "\d5200",  #
    "\d2F12",  #
    "\d529B",  #
    "\d2F13",  #
    "\d52F9",  #
    "\d2F14",  #
    "\d5315",  #
    "\d2F15",  #
    "\d531A",  #
    "\d2F16",  #
    "\d5338",  #
    "\d2F17",  #
    "\d5341",  #
    "\d2F18",  #
    "\d535C",  #
    "\d2F19",  #
    "\d5369",  #
    "\d2F1A",  #
    "\d5382",  #
    "\d2F1B",  #
    "\d53B6",  #
    "\d2F1C",  #
    "\d53C8",  #
    "\d2F1D",  #
    "\d53E3",  #
    "\d2F1E",  #
    "\d56D7",  #
    "\d2F1F",  #
    "\d571F",  #
    "\d2F20",  #
    "\d58EB",  #
    "\d2F21",  #
    "\d5902",  #
    "\d2F22",  #
    "\d590A",  #
    "\d2F23",  #
    "\d5915",  #
    "\d2F24",  #
    "\d5927",  #
    "\d2F25",  #
    "\d5973",  #
    "\d2F26",  #
    "\d5B50",  #
    "\d2F27",  #
    "\d5B80",  #
    "\d2F28",  #
    "\d5BF8",  #
    "\d2F29",  #
    "\d5C0F",  #
    "\d2F2A",  #
    "\d5C22",  #
    "\d2F2B",  #
    "\d5C38",  #
    "\d2F2C",  #
    "\d5C6E",  #
    "\d2F2D",  #
    "\d5C71",  #
    "\d2F2E",  #
    "\d5DDB",  #
    "\d2F2F",  #
    "\d5DE5",  #
    "\d2F30",  #
    "\d5DF1",  #
    "\d2F31",  #
    "\d5DFE",  #
    "\d2F32",  #
    "\d5E72",  #
    "\d2F33",  #
    "\d5E7A",  #
    "\d2F34",  #
    "\d5E7F",  #
    "\d2F35",  #
    "\d5EF4",  #
    "\d2F36",  #
    "\d5EFE",  #
    "\d2F37",  #
    "\d5F0B",  #
    "\d2F38",  #
    "\d5F13",  #
    "\d2F39",  #
    "\d5F50",  #
    "\d2F3A",  #
    "\d5F61",  #
    "\d2F3B",  #
    "\d5F73",  #
    "\d2F3C",  #
    "\d5FC3",  #
    "\d2F3D",  #
    "\d6208",  #
    "\d2F3E",  #
    "\d6236",  #
    "\d2F3F",  #
    "\d624B",  #
    "\d2F40",  #
    "\d652F",  #
    "\d2F41",  #
    "\d6534",  #
    "\d2F42",  #
    "\d6587",  #
    "\d2F43",  #
    "\d6597",  #
    "\d2F44",  #
    "\d65A4",  #
    "\d2F45",  #
    "\d65B9",  #
    "\d2F46",  #
    "\d65E0",  #
    "\d2F47",  #
    "\d65E5",  #
    "\d2F48",  #
    "\d66F0",  #
    "\d2F49",  #
    "\d6708",  #
    "\d2F4A",  #
    "\d6728",  #
    "\d2F4B",  #
    "\d6B20",  #
    "\d2F4C",  #
    "\d6B62",  #
    "\d2F4D",  #
    "\d6B79",  #
    "\d2F4E",  #
    "\d6BB3",  #
    "\d2F4F",  #
    "\d6BCB",  #
    "\d2F50",  #
    "\d6BD4",  #
    "\d2F51",  #
    "\d6BDB",  #
    "\d2F52",  #
    "\d6C0F",  #
    "\d2F53",  #
    "\d6C14",  #
    "\d2F54",  #
    "\d6C34",  #
    "\d2F55",  #
    "\d706B",  #
    "\d2F56",  #
    "\d722A",  #
    "\d2F57",  #
    "\d7236",  #
    "\d2F58",  #
    "\d723B",  #
    "\d2F59",  #
    "\d723F",  #
    "\d2EA6",  #
    "\d4E2C",  #
    "\d2F5A",  #
    "\d7247",  #
    "\d2F5B",  #
    "\d7259",  #
    "\d2F5C",  #
    "\d725B",  #
    "\d2F5D",  #
    "\d72AC",  #
    "\d2F5E",  #
    "\d7384",  #
    "\d2F5F",  #
    "\d7389",  #
    "\d2F60",  #
    "\d74DC",  #
    "\d2F61",  #
    "\d74E6",  #
    "\d2F62",  #
    "\d7518",  #
    "\d2F63",  #
    "\d751F",  #
    "\d2F64",  #
    "\d7528",  #
    "\d2F65",  #
    "\d7530",  #
    "\d2F66",  #
    "\d758B",  #
    "\d2F67",  #
    "\d7592",  #
    "\d2F68",  #
    "\d7676",  #
    "\d2F69",  #
    "\d767D",  #
    "\d2F6A",  #
    "\d76AE",  #
    "\d2F6B",  #
    "\d76BF",  #
    "\d2F6C",  #
    "\d76EE",  #
    "\d2F6D",  #
    "\d77DB",  #
    "\d2F6E",  #
    "\d77E2",  #
    "\d2F6F",  #
    "\d77F3",  #
    "\d2F70",  #
    "\d793A",  #
    "\d2F71",  #
    "\d79B8",  #
    "\d2F72",  #
    "\d79BE",  #
    "\d2F73",  #
    "\d7A74",  #
    "\d2F74",  #
    "\d7ACB",  #
    "\d2F75",  #
    "\d7AF9",  #
    "\d2F76",  #
    "\d7C73",  #
    "\d2F77",  #
    "\d7CF8",  #
    "\d2EB0",  #
    "\d7E9F",  #
    "\d2F78",  #
    "\d7F36",  #
    "\d2F79",  #
    "\d7F51",  #
    "\d2F7A",  #
    "\d7F8A",  #
    "\d2F7B",  #
    "\d7FBD",  #
    "\d2F7C",  #
    "\d8001",  #
    "\d2F7D",  #
    "\d800C",  #
    "\d2F7E",  #
    "\d8012",  #
    "\d2F7F",  #
    "\d8033",  #
    "\d2F80",  #
    "\d807F",  #
    "\d2F81",  #
    "\d8089",  #
    "\d2F82",  #
    "\d81E3",  #
    "\d2F83",  #
    "\d81EA",  #
    "\d2F84",  #
    "\d81F3",  #
    "\d2F85",  #
    "\d81FC",  #
    "\d2F86",  #
    "\d820C",  #
    "\d2F87",  #
    "\d821B",  #
    "\d2F88",  #
    "\d821F",  #
    "\d2F89",  #
    "\d826E",  #
    "\d2F8A",  #
    "\d8272",  #
    "\d2F8B",  #
    "\d8278",  #
    "\d2F8C",  #
    "\d864D",  #
    "\d2F8D",  #
    "\d866B",  #
    "\d2F8E",  #
    "\d8840",  #
    "\d2F8F",  #
    "\d884C",  #
    "\d2F90",  #
    "\d8863",  #
    "\d2F91",  #
    "\d897E",  #
    "\d2F92",  #
    "\d898B",  #
    "\d2EC5",  #
    "\d89C1",  #
    "\d2F93",  #
    "\d89D2",  #
    "\d2F94",  #
    "\d8A00",  #
    "\d2EC8",  #
    "\d8BA0",  #
    "\d2F95",  #
    "\d8C37",  #
    "\d2F96",  #
    "\d8C46",  #
    "\d2F97",  #
    "\d8C55",  #
    "\d2F98",  #
    "\d8C78",  #
    "\d2F99",  #
    "\d8C9D",  #
    "\d2EC9",  #
    "\d8D1D",  #
    "\d2F9A",  #
    "\d8D64",  #
    "\d2F9B",  #
    "\d8D70",  #
    "\d2F9C",  #
    "\d8DB3",  #
    "\d2F9D",  #
    "\d8EAB",  #
    "\d2F9E",  #
    "\d8ECA",  #
    "\d2ECB",  #
    "\d8F66",  #
    "\d2F9F",  #
    "\d8F9B",  #
    "\d2FA0",  #
    "\d8FB0",  #
    "\d2FA1",  #
    "\d8FB5",  #
    "\d2ECC",  #
    "\d8FB6",  #
    "\d2FA2",  #
    "\d9091",  #
    "\d2FA3",  #
    "\d9149",  #
    "\d2FA4",  #
    "\d91C6",  #
    "\d2FA5",  #
    "\d91CC",  #
    "\d2FA6",  #
    "\d91D1",  #
    "\d2ED0",  #
    "\d9485",  #
    "\d2FA7",  #
    "\d9577",  #
    "\d2ED3",  #
    "\d957F",  #
    "\d2FA8",  #
    "\d9580",  #
    "\d2ED4",  #
    "\d95E8",  #
    "\d2FA9",  #
    "\d961C",  #
    "\d2FAA",  #
    "\d96B6",  #
    "\d2FAB",  #
    "\d96B9",  #
    "\d2FAC",  #
    "\d96E8",  #
    "\d2FAD",  #
    "\d9751",  #
    "\d2FAE",  #
    "\d975E",  #
    "\d2FAF",  #
    "\d9762",  #
    "\d2FB0",  #
    "\d9769",  #
    "\d2FB1",  #
    "\d97CB",  #
    "\d2ED9",  #
    "\d97E6",  #
    "\d2FB2",  #
    "\d97ED",  #
    "\d2FB3",  #
    "\d97F3",  #
    "\d2FB4",  #
    "\d9801",  #
    "\d2EDA",  #
    "\d9875",  #
    "\d2FB5",  #
    "\d98A8",  #
    "\d2EDB",  #
    "\d98CE",  #
    "\d2FB6",  #
    "\d98DB",  #
    "\d2EDC",  #
    "\d98DE",  #
    "\d2FB7",  #
    "\d98DF",  #
    "\d2EE0",  #
    "\d9963",  #
    "\d2FB8",  #
    "\d9996",  #
    "\d2FB9",  #
    "\d9999",  #
    "\d2FBA",  #
    "\d99AC",  #
    "\d2EE2",  #
    "\d9A6C",  #
    "\d2FBB",  #
    "\d9AA8",  #
    "\d2FBC",  #
    "\d9AD8",  #
    "\d2FBD",  #
    "\d9ADF",  #
    "\d2FBE",  #
    "\d9B25",  #
    "\d2FBF",  #
    "\d9B2F",  #
    "\d2FC0",  #
    "\d9B32",  #
    "\d2FC1",  #
    "\d9B3C",  #
    "\d2FC2",  #
    "\d9B5A",  #
    "\d2EE5",  #
    "\d9C7C",  #
    "\d2FC3",  #
    "\d9CE5",  #
    "\d2EE6",  #
    "\d9E1F",  #
    "\d2FC4",  #
    "\d9E75",  #
    "\d2EE7",  #
    "\d5364",  #
    "\d2FC5",  #
    "\d9E7F",  #
    "\d2FC6",  #
    "\d9EA5",  #
    "\d2EE8",  #
    "\d9EA6",  #
    "\d2FC7",  #
    "\d9EBB",  #
    "\d2FC8",  #
    "\d9EC3",  #
    "\d2EE9",  #
    "\d9EC4",  #
    "\d2FC9",  #
    "\d9ECD",  #
    "\d2FCA",  #
    "\d9ED1",  #
    "\d2FCB",  #
    "\d9EF9",  #
    "\d2FCC",  #
    "\d9EFD",  #
    "\d2EEA",  #
    "\d9EFE",  #
    "\d2FCD",  #
    "\d9F0E",  #
    "\d2FCE",  #
    "\d9F13",  #
    "\d2FCF",  #
    "\d9F20",  #
    "\d2FD0",  #
    "\d9F3B",  #
    "\d2FD1",  #
    "\d9F4A",  #
    "\d2EEC",  #
    "\d9F50",  #
    "\d2FD2",  #
    "\d9F52",  #
    "\d2EEE",  #
    "\d9F7F",  #
    "\d2FD3",  #
    "\d9F8D",  #
    "\d2EF0",  #
    "\d9F99",  #
    "\d2FD4",  #
    "\d9F9C",  #
    "\d2EF3",  #
    "\d9F9F",  #
    "\d2FD5",  #
    "\d9FA0",  #
    ]
    test_data.each do |string|
      assert @validator.valid_encoding?(string), "U10_CJKRadicals: #{string}"
      assert string.force_encoding("UTF-8").valid_encoding?, "U10_CJKRadicals: #{string}" if @vercheck
    end
  end

end
